# Use this block to configure the AtScale base Helm chart. You can
# choose from using the OCI registry or a git branch (in case of testing a not released feature).
# To use the OCI registry, set `helmFromDocker` to `true` and set the `version` to the desired version.
# To use a git branch, set `helmFromDocker` to `false` and set the `version` to the desired branch.
# The `version` should be the full version number, including the patch version.
# For example, if the desired version is `2025.8.0`, set `version` to `2025.8.0`.

argo-deploy:
  helmFromDocker: true
  version: 2025.7.0

# Use the following blocks to configure the AtScale components.
# You can override the default values by setting the desired values.
# For example, if you want to use a different image, you can set the `image.repository` to the desired image.
# If you want to use a different image tag, you can set the `image.tag` to the desired tag.

global:
  atscale:
    keycloak:
      users:
        existingSecret: "keycloak-users-secret"
        existingSecretKeycloakAdminKeyRef: "keycloakAdmin"
        existingSecretKeycloakAdminPasswordKeyRef: "keycloakPassword"
        existingSecretAtscaleAdminKeyRef: "atscaleAdmin"
        existingSecretAtscaleAdminPassKeyRef: "atscalePassword"

      clients:
        api:
          clientSecret: "atscale"
        engine:
          clientSecret: "atscale"
        entitlement:
          clientSecret: "atscale"
        modeler:
          clientSecret: "atscale"
        publicApi:
          clientSecret: "atscale"
        existingSecret: "keycloak-clients-secret"
        existingSecretEngineKeyRef: "engine"
        existingSecretModelerKeyRef: "modeler"
        existingSecretApiKeyRef: "api"
        existingSecretPublicApiKeyRef: "publicApi"
        existingSecretEntitlementKeyRef: "entitlement"

    tls:
      existingSecret: atscale-internal-tls
  ingressDomain: apps2-aws.atscaleinternal.com


atscale-api:
  replicaCount: 3
  externalDatabase:
    existingSecret: atscale-postgres-external
    existingSecretDatabaseKey: database
    existingSecretHostKey: host
    existingSecretPasswordKey: password
    existingSecretPortKey: port
    existingSecretSslEnabledKey: sslEnabled
    existingSecretUserKey: user
  extraEnvVars:
    - name: HTTP_PROXY
      value: http://squid-proxy:3128
    - name: HTTPS_PROXY
      value: http://squid-proxy:3128
    - name: NO_PROXY
      value: localhost,127.0.0.0/8,::1,keycloak:8083,engine:10502,entitlement:3002
  # image:
  #   pullPolicy: Always
  #   repository: ghcr.io/atscaleinc/sml/api
  #   tag: release-2025.7.0
  # imagePullSecrets:
  #   - name: ghcr-credentials
atscale-engine:
  replicaCount: 3
  certImage:
    repository: docker.io/atscaleinc/engine-certs
    tag: 2025.7.0
  externalDatabase:
    existingSecret: atscale-postgres-external
    existingSecretDatabaseKey: database
    existingSecretHostKey: host
    existingSecretPasswordKey: password
    existingSecretPortKey: port
    existingSecretSslEnabledKey: sslEnabled
    existingSecretUserKey: user
  externalPgwire:
    existingSecret: pgwire-postgres-external
    existingSecretDatabaseKey: database
    existingSecretHostKey: host
    existingSecretPasswordKey: password
    existingSecretPortKey: port
    existingSecretUserKey: user
  # image:
  #   pullPolicy: Always
  #   repository: ghcr.io/atscaleinc/engine
  #   tag: release-2025.7.0
  # imagePullSecrets:
  #   - name: ghcr-credentials
  gateway:
    replicaCount: 3
atscale-entitlement:
  replicaCount: 3
  externalDatabase:
    existingSecret: atscale-postgres-external
    existingSecretDatabaseKey: database
    existingSecretHostKey: host
    existingSecretPasswordKey: password
    existingSecretPortKey: port
    existingSecretSslModeKey: sslMode
    existingSecretUserKey: user
  # image:
  #   pullPolicy: Always
  #   repository: ghcr.io/atscaleinc/entitlement
  #   tag: release-2025.7.0-dev
  # imagePullSecrets:
  #   - name: ghcr-credentials
atscale-proxy:
  tls:
    existingSecret: atscale-internal-tls
  replicaCount: 3
  service:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
    type: LoadBalancer
atscale-sml:
  replicaCount: 3
  gitAuth:
    existingSecret: "sml-github-auth-secret"
    existingSecretClientIdKey: "ATSCALE_GITHUB_APP_CLIENT_ID"
    existingSecretClientSecretKey: "ATSCALE_GITHUB_APP_CLIENT_SECRET"
  extraEnvVars:
    - name: HTTP_PROXY
      value: http://squid-proxy:3128
    - name: HTTPS_PROXY
      value: http://squid-proxy:3128
    - name: NO_PROXY
      value: localhost,127.0.0.0/8,::1,keycloak:8083,engine:10502,entitlement:3002
  # image:
  #   pullPolicy: Always
  #   repository: ghcr.io/atscaleinc/sml/web
  #   tag: release-2025.7.0
  # imagePullSecrets:
  #   - name: ghcr-credentials
keycloak:
  externalDatabase:
    existingSecret: keycloak-postgres-external
    existingSecretDatabaseKey: database
    existingSecretHostKey: host
    existingSecretPasswordKey: password
    existingSecretPortKey: port
    existingSecretUserKey: user
postgres:
  enabled: false
redis:
  master:
    persistence:
      size: 32Gi
  replica:
    replicaCount: 3
    persistence:
      size: 32Gi
telemetry:
  replicaCount: 3